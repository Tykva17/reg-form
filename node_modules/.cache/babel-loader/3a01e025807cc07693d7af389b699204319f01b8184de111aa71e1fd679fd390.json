{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/product_it_school/src/modals/SignIn/SignIn.js\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignIn() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign_in_modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: '',\n          password: ''\n        },\n        validate: values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            errors.email = 'Invalid email address';\n          }\n          return errors;\n        },\n        onSubmit: (values, _ref) => {\n          let {\n            setSubmitting\n          } = _ref;\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        },\n        children: _ref2 => {\n          let {\n            isSubmitting\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              type: \"email\",\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"password\",\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: isSubmitting,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }, this);\n}\n_c = SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","jsxDEV","_jsxDEV","SignIn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","email","password","validate","values","errors","test","onSubmit","_ref","setSubmitting","setTimeout","alert","JSON","stringify","_ref2","isSubmitting","type","name","component","disabled","_c","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/product_it_school/src/modals/SignIn/SignIn.js"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nexport default function SignIn(){\n\n\n\n    return (\n\n            <div className='sign_in_modal'>\n                <div>\n                    <h1>Sign in</h1>\n                    <Formik\n                        initialValues={{ email: '', password: '' }}\n                        validate={values => {\n                            const errors = {};\n                            if (!values.email) {\n                                errors.email = 'Required';\n                            } else if (\n                                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                            ) {\n                                errors.email = 'Invalid email address';\n                            }\n                            return errors;\n                        }}\n                        onSubmit={(values, { setSubmitting }) => {\n                            setTimeout(() => {\n                                alert(JSON.stringify(values, null, 2));\n                                setSubmitting(false);\n                            }, 400);\n                        }}\n                    >\n                        {({ isSubmitting }) => (\n                            <Form>\n                                <Field type=\"email\" name=\"email\" />\n                                <ErrorMessage name=\"email\" component=\"div\" />\n                                <Field type=\"password\" name=\"password\" />\n                                <ErrorMessage name=\"password\" component=\"div\" />\n                                <button type=\"submit\" disabled={isSubmitting}>\n                                    Submit\n                                </button>\n                            </Form>\n                        )}\n                    </Formik>\n                </div>\n            </div>\n\n    )\n\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,YAAY,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,eAAe,SAASC,MAAMA,CAAA,EAAE;EAI5B,oBAEQD,OAAA;IAAKE,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC1BH,OAAA;MAAAG,QAAA,gBACIH,OAAA;QAAAG,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBP,OAAA,CAACL,MAAM;QACHa,aAAa,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAG,CAAE;QAC3CC,QAAQ,EAAEC,MAAM,IAAI;UAChB,MAAMC,MAAM,GAAG,CAAC,CAAC;UACjB,IAAI,CAACD,MAAM,CAACH,KAAK,EAAE;YACfI,MAAM,CAACJ,KAAK,GAAG,UAAU;UAC7B,CAAC,MAAM,IACH,CAAC,0CAA0C,CAACK,IAAI,CAACF,MAAM,CAACH,KAAK,CAAC,EAChE;YACEI,MAAM,CAACJ,KAAK,GAAG,uBAAuB;UAC1C;UACA,OAAOI,MAAM;QACjB,CAAE;QACFE,QAAQ,EAAEA,CAACH,MAAM,EAAAI,IAAA,KAAwB;UAAA,IAAtB;YAAEC;UAAc,CAAC,GAAAD,IAAA;UAChCE,UAAU,CAAC,MAAM;YACbC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACT,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YACtCK,aAAa,CAAC,KAAK,CAAC;UACxB,CAAC,EAAE,GAAG,CAAC;QACX,CAAE;QAAAd,QAAA,EAEDmB,KAAA;UAAA,IAAC;YAAEC;UAAa,CAAC,GAAAD,KAAA;UAAA,oBACdtB,OAAA,CAACJ,IAAI;YAAAO,QAAA,gBACDH,OAAA,CAACH,KAAK;cAAC2B,IAAI,EAAC,OAAO;cAACC,IAAI,EAAC;YAAO;cAAArB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACnCP,OAAA,CAACF,YAAY;cAAC2B,IAAI,EAAC,OAAO;cAACC,SAAS,EAAC;YAAK;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC7CP,OAAA,CAACH,KAAK;cAAC2B,IAAI,EAAC,UAAU;cAACC,IAAI,EAAC;YAAU;cAAArB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACzCP,OAAA,CAACF,YAAY;cAAC2B,IAAI,EAAC,UAAU;cAACC,SAAS,EAAC;YAAK;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAChDP,OAAA;cAAQwB,IAAI,EAAC,QAAQ;cAACG,QAAQ,EAAEJ,YAAa;cAAApB,QAAA,EAAC;YAE9C;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC;QAAA;MACV;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAIlB;AAACqB,EAAA,GA9CuB3B,MAAM;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}